
## Libraries

library(tidyverse)
library(devtools)
library(rpredictit)

## Functions

Find_Arbitrage_No <- function(id_num){
  Arbitrage <- all_markets() %>% 
    filter(id == id_num) 
  Arbitrage <- Arbitrage %>% 
    select(shortName, timeStamp, contract_name, lastTradePrice, bestBuyYesCost, bestBuyNoCost, bestSellYesCost, bestSellNoCost, lastClosePrice) %>% 
    mutate(Gain = (1 - bestBuyNoCost)*0.9) %>% 
    drop_na(bestBuyNoCost) %>% 
    mutate(Total_Gain = sum(Gain)) %>% 
    mutate(Risk = Total_Gain - Gain - bestBuyNoCost)
  if (sum(Arbitrage$Risk > 0) == length(Arbitrage$Risk)) {
    print("Arbitrage exists")
    Aribtrage %>% 
      select(shortName, timeStamp, contract_name, bestBuyNoCost, lastClosePrice, Risk)
  } else if (sum(Arbitrage$Risk > 0) == 0) {
    print("Arbitrage does not exist")
  } else if (sum(Arbitrage$Risk > 0) > 1) {
    print("Arbitrage does not exist currently but can switch easily")
    Arbitrage %>% 
      select(shortName, timeStamp, contract_name, bestBuyNoCost, lastClosePrice, Risk)
  }
}

## Tables

Arbitrage_Plus <- all_markets() %>% 
  group_by(as.factor(contract_id)) 
Arbitrage_Plus <- Arbitrage_Plus %>% 
  select(shortName, contract_id, timeStamp, contract_name, lastTradePrice, bestBuyYesCost, bestBuyNoCost, bestSellYesCost, bestSellNoCost, lastClosePrice) %>% 
  mutate(Gain = (1 - bestBuyNoCost)*0.9) %>% 
  drop_na(bestBuyNoCost) %>% 
  group_by(shortName) %>% 
  mutate(Total_Gain = sum(Gain)) %>% 
  mutate(Risk = Total_Gain - Gain - bestBuyNoCost) %>%
  mutate(Arbitrage = case_when(
    Risk =  sum(Risk > 0) == 0 ~ "No",
    Risk =  sum(Risk > 0) == length(Risk) ~ "Yes",
    Risk =  sum(Risk > 0) > 1 ~ "No*"
  )) %>% 
  filter(Arbitrage %in% c("Yes","No*"))
Arbitrage_Plus

Arbitrage_Strict <- all_markets() %>% 
  group_by(as.factor(contract_id)) 
Arbitrage_Strict <- Arbitrage_Strict %>% 
  select(shortName, contract_id, timeStamp, contract_name, lastTradePrice, bestBuyYesCost, bestBuyNoCost, bestSellYesCost, bestSellNoCost, lastClosePrice) %>% 
  mutate(Gain = (1 - bestBuyNoCost)*0.9) %>% 
  drop_na(bestBuyNoCost) %>% 
  group_by(shortName) %>% 
  mutate(Total_Gain = sum(Gain)) %>% 
  mutate(Risk = Total_Gain - Gain - bestBuyNoCost) %>%
  mutate(Arbitrage_Strict = case_when(
    Risk =  sum(Risk > 0) == 0 ~ "No",
    Risk =  sum(Risk > 0) == length(Risk) ~ "Yes",
    Risk =  sum(Risk > 0) > 1 ~ "No*"
  )) %>% 
  filter(Arbitrage_Strict == "Yes")
Arbitrage_Strict


